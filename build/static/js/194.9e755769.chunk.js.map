{"version":3,"file":"static/js/194.9e755769.chunk.js","mappings":"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","sources":["../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","views/ContactUs.jsx"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React from \"react\";\nimport { useRef } from \"react\";\nimport emailjs from \"@emailjs/browser\"\nimport { CategoriesData } from \"../dataJson/CategoriesData\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ContactUs = () => {\n  const form = useRef();\n  const navigate=useNavigate();\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(\n        \"service_kd0qax9\",\n        \"template_dyt5ehd\",\n        form.current,\n        \"CGfMlTTd0JD9zR-ik\"\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n          alert('Well received!, Thank you for contacting us!');\n          navigate('/');\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n  };\n\n  return (\n    <form ref={form} onSubmit={sendEmail}>\n      <div className=\"flex flex-column align-items-center mt-10\">\n        <div className=\"poppins xl:text-[25px] lg:text-[25px] md:text-[23px] sm:text-[20px] text-[20px] fontWeight-700\">\n          Get in touch\n        </div>\n        <div className=\"max-w-[430px] fontWeight-300 poppins text-[20px] opacity-[.8] mt-10\">\n          Ensure that your brand stands out at every point of your customers'\n          journey, whether they're just discovering your brand, actively\n          considering, or ready to convert.\n        </div>\n        <div className=\"bg-white h-[123px] w-[.5px] opacity-[.5] mt-8 mb-8\"></div>\n\n        <div className=\"flex flex-column align-items-center  max-w-[430px] \">\n          <div className=\"poppins fontWeight-700 text-[25px] inline-block\">\n            LETâ€™S DISCUSS <p className=\"text-[#FF763B] inline-block\"> YOUR</p>\n          </div>\n          <div>\n            <p className=\"text-[#FF763B] inline-block poppins fontWeight-700 text-[25px] mb-10\">\n              REQUIREMENTS\n            </p>\n          </div>\n        </div>\n        <div>\n          <div className=\"text-[15px] fontWeight-400 poppins mb-1\">\n            Username\n          </div>\n          <input\n            type=\"text\"\n            name=\"user_name\"\n            className=\"w-full md:w-[378px] h-[36px] text-black mb-4 rounded-[5px] px-3\"\n            placeholder=\"Username\"\n          />\n        </div>\n        <div>\n          <div className=\"text-[15px] fontWeight-400 poppins mb-1\">Email</div>\n          <input\n            type=\"email\"\n            name=\"user_email\"\n            className=\"w-full md:w-[378px] text-black h-[36px] rounded-[5px] px-3\"\n            placeholder=\"Example@site.com\"\n          />\n        </div>\n        <div>\n          <div className=\"flex justify-start items-center w-full md:w-[378px] mb-4 \">\n            <div className=\"text-[15px] fontWeight-400 poppins mt-4\">\n              What services are you looking for?\n            </div>\n          </div>\n          <div className=\"mb-8\">\n            <select className=\"px-3 py-[4px] \">\n              {CategoriesData?.map((group, index) => (\n                <option value={group.groupName} key={index}>\n                  {group.groupName}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"flex justify-start items-center w-full md:w-[378px] mb-4 \">\n            <div className=\"text-[15px] fontWeight-400 poppins \">\n              Tell us a little bit about your project\n            </div>\n          </div>\n          <div className=\"flex justify-start items-center w-full md:w-[378px]  \">\n            <div className=\"text-[15px] text-gray-400 text-[12px] poppins max-w-[378px] \">\n              What does your company do? What project do you need help with?\n              This is optional, but helps get the ball rolling.\n            </div>\n          </div>\n          <div className=\"flex justify-start items-center w-full md:w-[378px]  \">\n            <textarea\n              name=\"message\"\n              className=\"max-w-[378px] h-[176px] rounded-md bg-white italic poppins text-black p-4 \"\n              placeholder=\"Add a comment\"\n            />\n          </div>\n          <div className=\"flex justify-start items-center w-full md:w-[378px] mb-4 \">\n            <input\n              type=\"submit\"\n              value=\"Send\"\n              className=\"rounded-md py-4 w-full  bg-[#EF4823] max-w-[378px]\"\n            />\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\n{\n  /* <form ref={form} onSubmit={sendEmail}>\n  <label>Name</label>\n  <input type=\"text\" name=\"user_name\" />\n  <label>Email</label>\n  <input type=\"email\" name=\"user_email\" />\n  <label>Message</label>\n  <textarea name=\"message\" />\n  <input type=\"submit\" value=\"Send\" />\n</form>; */\n}\n\nexport default ContactUs;\n"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","_createClass","httpResponse","_classCallCheck","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","useRef","navigate","useNavigate","_jsx","ref","onSubmit","e","preventDefault","emailjs","current","then","result","console","log","alert","error","children","_jsxs","className","type","name","placeholder","CategoriesData","group","index","value","groupName"],"sourceRoot":""}