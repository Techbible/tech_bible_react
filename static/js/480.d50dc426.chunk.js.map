{"version":3,"file":"static/js/480.d50dc426.chunk.js","mappings":"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","sources":["../../node_modules/@emailjs/browser/es/store/store.js","../../node_modules/@emailjs/browser/es/utils/validateParams.js","../../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../../node_modules/@emailjs/browser/es/api/sendPost.js","../../node_modules/@emailjs/browser/es/index.js","../../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","views/ContactUs.jsx"],"sourcesContent":["export const store = {\r\n    _origin: 'https://api.emailjs.com',\r\n};\r\n","export const validateParams = (publicKey, serviceID, templateID) => {\r\n    if (!publicKey) {\r\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\r\n    }\r\n    if (!serviceID) {\r\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\r\n    }\r\n    if (!templateID) {\r\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\r\n    }\r\n    return true;\r\n};\r\n","export class EmailJSResponseStatus {\r\n    constructor(httpResponse) {\r\n        this.status = httpResponse ? httpResponse.status : 0;\r\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\r\n    }\r\n}\r\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\r\nimport { store } from '../store/store';\r\nexport const sendPost = (url, data, headers = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.addEventListener('load', ({ target }) => {\r\n            const responseStatus = new EmailJSResponseStatus(target);\r\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\r\n                resolve(responseStatus);\r\n            }\r\n            else {\r\n                reject(responseStatus);\r\n            }\r\n        });\r\n        xhr.addEventListener('error', ({ target }) => {\r\n            reject(new EmailJSResponseStatus(target));\r\n        });\r\n        xhr.open('POST', store._origin + url, true);\r\n        Object.keys(headers).forEach((key) => {\r\n            xhr.setRequestHeader(key, headers[key]);\r\n        });\r\n        xhr.send(data);\r\n    });\r\n};\r\n","import { init } from './methods/init/init';\r\nimport { send } from './methods/send/send';\r\nimport { sendForm } from './methods/sendForm/sendForm';\r\nexport { init, send, sendForm };\r\nexport default {\r\n    init,\r\n    send,\r\n    sendForm,\r\n};\r\n","import { store } from '../../store/store';\r\nimport { validateParams } from '../../utils/validateParams';\r\nimport { sendPost } from '../../api/sendPost';\r\nconst findHTMLForm = (form) => {\r\n    let currentForm;\r\n    if (typeof form === 'string') {\r\n        currentForm = document.querySelector(form);\r\n    }\r\n    else {\r\n        currentForm = form;\r\n    }\r\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\r\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\r\n    }\r\n    return currentForm;\r\n};\r\n/**\r\n * Send a form the specific EmailJS service\r\n * @param {string} serviceID - the EmailJS service ID\r\n * @param {string} templateID - the EmailJS template ID\r\n * @param {string | HTMLFormElement} form - the form element or selector\r\n * @param {string} publicKey - the EmailJS public key\r\n * @returns {Promise<EmailJSResponseStatus>}\r\n */\r\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\r\n    const uID = publicKey || store._userID;\r\n    const currentForm = findHTMLForm(form);\r\n    validateParams(uID, serviceID, templateID);\r\n    const formData = new FormData(currentForm);\r\n    formData.append('lib_version', '3.11.0');\r\n    formData.append('service_id', serviceID);\r\n    formData.append('template_id', templateID);\r\n    formData.append('user_id', uID);\r\n    return sendPost('/api/v1.0/email/send-form', formData);\r\n};\r\n","import React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport emailjs from \"@emailjs/browser\"\r\nimport { CategoriesData } from \"../dataJson/CategoriesData\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ContactUs = () => {\r\n  const form = useRef();\r\n  const navigate=useNavigate();\r\n\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n\r\n    emailjs\r\n      .sendForm(\r\n        \"service_kd0qax9\",\r\n        \"template_dyt5ehd\",\r\n        form.current,\r\n        \"CGfMlTTd0JD9zR-ik\"\r\n      )\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text);\r\n          alert('Well received!, Thank you for contacting us!');\r\n          navigate('/');\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <form ref={form} onSubmit={sendEmail}>\r\n      <div className=\"flex flex-column align-items-center mt-10\">\r\n        <div className=\"poppins xl:text-[25px] lg:text-[25px] md:text-[23px] sm:text-[20px] text-[20px] fontWeight-700\">\r\n          Get in touch\r\n        </div>\r\n        <div className=\"max-w-[430px] fontWeight-300 poppins text-[20px] opacity-[.8] mt-10\">\r\n          Ensure that your brand stands out at every point of your customers'\r\n          journey, whether they're just discovering your brand, actively\r\n          considering, or ready to convert.\r\n        </div>\r\n        <div className=\"bg-white h-[123px] w-[.5px] opacity-[.5] mt-8 mb-8\"></div>\r\n\r\n        <div className=\"flex flex-column align-items-center  max-w-[430px] \">\r\n          <div className=\"poppins fontWeight-700 text-[25px] inline-block\">\r\n            LETâ€™S DISCUSS <p className=\"text-[#FF763B] inline-block\"> YOUR</p>\r\n          </div>\r\n          <div>\r\n            <p className=\"text-[#FF763B] inline-block poppins fontWeight-700 text-[25px] mb-10\">\r\n              REQUIREMENTS\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"text-[15px] fontWeight-400 poppins mb-1\">\r\n            Username\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"user_name\"\r\n            className=\"w-full md:w-[378px] h-[36px] text-black mb-4 rounded-[5px] px-3\"\r\n            placeholder=\"Username\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <div className=\"text-[15px] fontWeight-400 poppins mb-1\">Email</div>\r\n          <input\r\n            type=\"email\"\r\n            name=\"user_email\"\r\n            className=\"w-full md:w-[378px] text-black h-[36px] rounded-[5px] px-3\"\r\n            placeholder=\"Example@site.com\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <div className=\"flex justify-start items-center w-full md:w-[378px] mb-4 \">\r\n            <div className=\"text-[15px] fontWeight-400 poppins mt-4\">\r\n              What services are you looking for?\r\n            </div>\r\n          </div>\r\n          <div className=\"mb-8\">\r\n            <select className=\"px-3 py-[4px] \">\r\n              {CategoriesData?.map((group, index) => (\r\n                <option value={group.groupName} key={index}>\r\n                  {group.groupName}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"flex justify-start items-center w-full md:w-[378px] mb-4 \">\r\n            <div className=\"text-[15px] fontWeight-400 poppins \">\r\n              Tell us a little bit about your project\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-start items-center w-full md:w-[378px]  \">\r\n            <div className=\"text-[15px] text-gray-400 text-[12px] poppins max-w-[378px] \">\r\n              What does your company do? What project do you need help with?\r\n              This is optional, but helps get the ball rolling.\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-start items-center w-full md:w-[378px]  \">\r\n            <textarea\r\n              name=\"message\"\r\n              className=\"max-w-[378px] h-[176px] rounded-md bg-white italic poppins text-black p-4 \"\r\n              placeholder=\"Add a comment\"\r\n            />\r\n          </div>\r\n          <div className=\"flex justify-start items-center w-full md:w-[378px] mb-4 \">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Send\"\r\n              className=\"rounded-md py-4 w-full  bg-[#EF4823] max-w-[378px]\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\n{\r\n  /* <form ref={form} onSubmit={sendEmail}>\r\n  <label>Name</label>\r\n  <input type=\"text\" name=\"user_name\" />\r\n  <label>Email</label>\r\n  <input type=\"email\" name=\"user_email\" />\r\n  <label>Message</label>\r\n  <textarea name=\"message\" />\r\n  <input type=\"submit\" value=\"Send\" />\r\n</form>; */\r\n}\r\n\r\nexport default ContactUs;\r\n"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","_createClass","httpResponse","_classCallCheck","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","useRef","navigate","useNavigate","_jsx","ref","onSubmit","e","preventDefault","emailjs","current","then","result","console","log","alert","error","children","_jsxs","className","type","name","placeholder","CategoriesData","group","index","value","groupName"],"sourceRoot":""}